{"name": "test_can_user_make_purchase", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_steps.Test testMethod=test_can_user_make_purchase>\n\n    @allure.step(\"Test: Can user make a purchase\")\n    def test_can_user_make_purchase(self):\n            home_page = HomePage(self.driver)\n            home_page.visit_login_page()\n            login_page = LoginPage(self.driver)\n            login_page.login('alexislopezg07@gmail.com', 'Yamero!')\n            home_page = HomePage(self.driver)\n            home_page.search_item('2017 Rollerblade Hombre')\n>           search_page = SearchPage(self.driver)\n\ntest_steps.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Page\\SearchPage.py:11: in __init__\n    EC.presence_of_element_located((By.XPATH, \"//h3/a[contains(text(),'Rollerblade metroblade')]\")))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cf0e7283552e23c1515b3490744ba252\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x0000027483AFCEF0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "steps": [{"name": "Test: Can user make a purchase", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Python\\lib\\site-packages\\allure_commons\\_allure.py\", line 141, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\alexi\\PycharmProjects\\eBay_Purchase_Test\\testcases\\test_steps.py\", line 38, in test_can_user_make_purchase\n    search_page = SearchPage(self.driver)\n  File \"C:\\Users\\alexi\\PycharmProjects\\eBay_Purchase_Test\\Page\\SearchPage.py\", line 11, in __init__\n    EC.presence_of_element_located((By.XPATH, \"//h3/a[contains(text(),'Rollerblade metroblade')]\")))\n  File \"C:\\Python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1543477662515, "stop": 1543477682428}], "attachments": [{"source": "11be1bef-0bd5-4a9b-9295-244aacc6390d-attachment.attach"}, {"name": "log", "source": "18db65a0-1b99-409c-8e2c-211e756a3056-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "9b4c26f5-b850-4961-b103-1a4267fd5d7b-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "79bc5553-bcc0-490b-adf7-8e8b58a18ea9-attachment.txt", "type": "text/plain"}], "start": 1543477656958, "stop": 1543477684566, "uuid": "7d210507-c019-4518-9d9f-72747756b3d8", "historyId": "034045bb817a609125d8a3b7ae393924", "fullName": "test_steps.Test#test_can_user_make_purchase", "labels": [{"name": "suite", "value": "test_steps"}, {"name": "subSuite", "value": "Test"}, {"name": "host", "value": "DESKTOP-UB5E2R0"}, {"name": "thread", "value": "14276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_steps"}]}